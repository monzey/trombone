use flake

export PGDATA="$PWD/.postgres/data"
export PGSOCKETDIR="$PWD/.postgres/socket"
export PGPORT="5434"
export PGDATABASE="ma_super_db"
export PGHOST="$PWD/.postgres"
export PGUSER="postgres"
export PGPASSWORD="postgres"
export PGHOST="localhost"
export DATABASE_URL="postgresql://$PGUSER:$PGPASSWORD@$PGHOST:$PGPORT/$PGDATABASE"

start_postgres() {
  if ! [ -d "$PGDATA" ]; then
    echo "--- Initialisation de la base de données PostgreSQL ---"
    initdb -D "$PGDATA" --no-locale --encoding=UTF8

    echo "--- Démarrage temporaire pour la configuration ---"
    pg_ctl start -D "$PGDATA" -l "$PWD/.postgres/logfile" -o "-p $PGPORT -k '$PGSOCKETDIR'" -w

    echo "--- Création du rôle '$PGUSER' ---"
    psql -U "$USER" -d postgres -p "$PGPORT" -h "$PGSOCKETDIR" -c "CREATE ROLE \"$PGUSER\" WITH LOGIN PASSWORD '$PGPASSWORD' SUPERUSER;"

    echo "--- Création de la base de données '$PGDATABASE' ---"
    createdb -p "$PGPORT" -h "$PGHOST" -O "$PGUSER" "$PGDATABASE"

    echo "--- Arrêt du serveur après configuration ---"
    pg_ctl stop -D "$PGDATA"
  fi

  if ! pg_ctl status -D "$PGDATA" >/dev/null; then
    echo "--- Démarrage de PostgreSQL sur le port $PGPORT ---"
    pg_ctl start -D "$PGDATA" -l "$PWD/.postgres/logfile" -o "-p $PGPORT -k '$PGSOCKETDIR'" -W
  else
    echo "--- PostgreSQL est déjà démarré sur le port $PGPORT ---"
  fi
}

start_postgres
